as.character(anc_HRS_afr$ID)-> anc_HRS_afr$ID
setkey(anc_HRS_afr, ID)
PGS2_HRS_afr<-vector('list', length(PGS_HRS_afr))
names(PGS2_HRS_afr)<-names(PGS_HRS_afr)
for (I in names(PGS_HRS_afr)){
        data.table(ID=names(PGS_HRS_afr[[I]]), PGS=unlist(PGS_HRS_afr[[I]]))-> PGS2_HRS_afr[[I]]
        setkey(PGS2_HRS_afr[[I]], ID)
        PGS2_HRS_afr[[I]][Pheno_HRS_afr, nomatch=0]-> PGS2_HRS_afr[[I]]
        PGS2_HRS_afr[[I]][anc_HRS_afr, nomatch=0]-> PGS2_HRS_afr[[I]]
        PGS2_HRS_afr[[I]][,AGE2:=AGE^2]
        PGS2_HRS_afr[[I]][AFR_ANC>=0.05]-> PGS2_HRS_afr[[I]]
        PGS2_HRS_afr[[I]][which(!is.na(PGS2_HRS_afr[[I]][,HEIGHT])),]-> PGS2_HRS_afr[[I]]
}
lapply(PGS2_HRS_afr, function(X) lm(HEIGHT~SEX, X))-> lm0_HRS_afr
lapply(PGS2_HRS_afr, function(X) lm(HEIGHT~PGS, X))-> lm1_HRS_afr
lapply(PGS2_HRS_afr, function(X) lm(HEIGHT~AGE, X))-> lm2_HRS_afr
lapply(PGS2_HRS_afr, function(X) lm(HEIGHT~AGE2, X))-> lm3_HRS_afr
lapply(PGS2_HRS_afr, function(X) lm(HEIGHT~EUR_ANC, X))-> lm4_HRS_afr
lapply(PGS2_HRS_afr, function(X) lm(HEIGHT~PGS+AGE, X))-> lm5_HRS_afr
lapply(PGS2_HRS_afr, function(X) lm(HEIGHT~PGS+AGE2, X))-> lm6_HRS_afr
lapply(PGS2_HRS_afr, function(X) lm(HEIGHT~SEX+AGE+AGE2+EUR_ANC, X))-> lm7_HRS_afr
lapply(PGS2_HRS_afr, function(X) lm(HEIGHT~SEX+AGE+AGE2+EUR_ANC+PGS, X))-> lm8_HRS_afr
partial_r2_HRS_afr<-lapply(1:length(PGS2_HRS_afr), function(X) partial.R2(lm7_HRS_afr[[X]], lm8_HRS_afr[[X]])) #
names(partial_r2_HRS_afr)<-names(PGS2_HRS_afr)
partial.R2(lm7_HRS_afr[[63]],lm8_HRS_afr[[63]]) #1,06
partial.R2(lm7_HRS_afr[[67]],lm8_HRS_afr[[67]]) #1.08
partial.R2(lm7_HRS_afr[[64]],lm8_HRS_afr[[64]]) #
PGS2_HRS_afr[[63]]
PGS2_HRS_afr[[63]][,EUR_ANC]
summary(PGS2_HRS_afr[[63]][,EUR_ANC])
!/usr/bin/env Rscript
##preable###
###########
library("optparse")
library(data.table)
library(dplyr)
library(ggplot2);library(reshape2); library(wesanderson)
library(rlist)
library(asbio)
library(GGally)
library(tidyr)
library(hexbin)
library(psychometric)
library(boot)
library(readr)
#############
#############
#read in PGS scores
readRDS('~/height_prediction/gwas/JHS/output/PGS_JHS.Rds')-> PGS_JHS
#read in phenotype data
fread('~/height_prediction/input/JHS/JHS_phenotypes.txt')-> Pheno_JHS
#a partial R2 function
source('~/height_prediction/strat_prs/scripts/Rsq_R2.R')
##############
#add PGS to Pheno table in order to be able to make multiple analyses
#Pheno_JHS[, SUBJID:=paste0("0_", as.character(Pheno_JHS[, SUBJID]))]
setkey(Pheno_JHS, SUBJID)
a<-unlist(lapply(names(PGS_JHS[[1]]), function(X) substr(X, 1,7)))
for(I in 1:length(PGS_JHS)){
names(PGS_JHS[[I]])<-a
}
#add ancestry
ancestry<-do.call(rbind, lapply(1:22, function(X) fread(paste0('~/height_prediction/input/JHS/rfmix_anc_chr', X, '.txt'))))
anc_JHS<-ancestry %>% group_by(SUBJID) %>% summarise(AFR_ANC=mean(AFR_ANC), EUR_ANC=1-mean(AFR_ANC)) %>% as.data.table #mean across chromosomes for each individual
anc_JHS$SUBJID<-substr(anc_JHS[,SUBJID],3,9)
setkey(anc_JHS, SUBJID)
PGS2_JHS<-vector('list', length(PGS_JHS))
names(PGS2_JHS)<-names(PGS_JHS)
PGS2_JHS<-vector('list', length(PGS_JHS))
names(PGS2_JHS)<-names(PGS_JHS)
for (I in names(PGS2_JHS)){
        data.table(SUBJID=names(PGS_JHS[[I]]), PGS=unlist(PGS_JHS[[I]]))-> PGS2_JHS[[I]]
        setkey(PGS2_JHS[[I]], SUBJID)
        PGS2_JHS[[I]][Pheno_JHS, nomatch=0]-> PGS2_JHS[[I]]
        PGS2_JHS[[I]][anc_JHS, nomatch=0]-> PGS2_JHS[[I]]
        PGS2_JHS[[I]][,age2:=age_baseline^2]
        PGS2_JHS[[I]][,age:=age_baseline][, age_baseline:=NULL]
        PGS2_JHS[[I]][AFR_ANC>=0.05]-> PGS2_JHS[[I]]#filter out individuals that are not african...
        PGS2_JHS[[I]][-which(is.na(PGS2_JHS[[I]][,height_baseline])),]-> PGS2_JHS[[I]]
        PGS2_JHS[[I]][,HEIGHTX:=height_baseline]
        PGS2_JHS[[I]][,height_baseline:=NULL]
        PGS2_JHS[[I]][, sex:=sex_selfreport]
        PGS2_JHS[[I]][,sex_selfreport:=NULL]
}
lapply(PGS2_JHS, function(X) lm(HEIGHTX~sex,X))-> lm0_JHS
lapply(PGS2_JHS, function(X) lm(HEIGHTX~PGS, X))-> lm1_JHS
lapply(PGS2_JHS, function(X) lm(HEIGHTX~age, X))-> lm2_JHS
lapply(PGS2_JHS, function(X) lm(HEIGHTX~age2, X))-> lm3_JHS
lapply(PGS2_JHS, function(X) lm(HEIGHTX~EUR_ANC, X))-> lm4_JHS
lapply(PGS2_JHS, function(X) lm(HEIGHTX~sex+age, X))-> lm5_JHS
lapply(PGS2_JHS, function(X) lm(HEIGHTX~sex+age+age2, X))-> lm6_JHS
lapply(PGS2_JHS, function(X) lm(HEIGHTX~sex+age+age2+EUR_ANC, X))-> lm7_JHS
lapply(PGS2_JHS, function(X) lm(HEIGHTX~sex+age+age2+EUR_ANC+PGS,X))-> lm8_JHS
partial.R2(lm7_JHS[[67]],lm8_JHS[[67]]) #4.24%
partial.R2(lm7_JHS[[63]],lm8_JHS[[63]]) #3.59%
partial_r2_JHS<-lapply(1:length(PGS2_JHS), function(X) partial.R2(lm7_JHS[[X]], lm8_JHS[[X]])) #min 1.8, max 4.27
names(partial_r2_JHS)<- names(PGS2_JHS)
Nr_SNPs<-rep(NA, length(PGS2_JHS))
names(Nr_SNPs)<- names(PGS2_JHS)
for(I in names(Nr_SNPs)){
        readRDS(paste0('~/height_prediction/gwas/JHS/output/hei_', I, '.Rds'))-> smtg
        sum(sapply(smtg, function(X) nrow(X)))-> Nr_SNPs[I]
        cat(I, ' \n')
}
data.table(Nr=unlist(Nr_SNPs), Name=names(Nr_SNPs), Part_R2=unlist(partial_r2_JHS))-> A_table
saveRDS(A_table, file='~/height_prediction/gwas/JHS/output/Nr_SNPs_JHS.Rds')
cor.test(unlist(Nr_SNPs), unlist(partial_r2_JHS))# 0.53
summary(lm(Part_R2~Nr,data=A_table))$r.squared #0.28
#
#interestingly, the LD pruned sets scrw things up. If we remvoe them
for(I in 1:length(PGS2_JHS)){
        A<-ggpairs(PGS2_JHS[[I]][,.(HEIGHTX, PGS, sex, age,EUR_ANC,weight_baseline)])
        png(filename=paste0('~/height_prediction/gwas/JHS/figs/JHS_ggpairs_', names(PGS2_JHS)[I], '.png'))
        print(A)
        cat(names(PGS2_JHS)[I])
        cat(' done\n')
        dev.off()
}
lapply(PGS2_JHS, function(X) X[, Quantile:= cut(EUR_ANC,
                                breaks=quantile(EUR_ANC, probs=seq(0,1, by=1/2), na.rm=TRUE),
                                include.lowest=TRUE)])-> PGS3_JHS
lapply(1:length(PGS3_JHS), function(X) PGS3_JHS[[X]][,Med_Eur_Anc:=median(EUR_ANC),by=Quantile])
lapply(1:length(PGS3_JHS), function(X) as.character(unique((PGS3_JHS[[X]]$Quantile))))-> a
a
lapply(a, function(X) c(X[2], X[1]))-> a1
names(a1)<-names(PGS3_JHS)
r2_JHS<-vector('list', length(PGS3_JHS))
names(r2_JHS)<-names(PGS3_JHS)
PGS3_JHS[[1]]
for(I in names(r2_JHS)){
        r2_JHS[[I]]<-vector('list', length(a1[[I]]))
        names(r2_JHS[[I]])<-a1[[I]]
        for(i in a1[[I]]){
        r2_JHS[[I]][[i]]<-partial.R2(lm(HEIGHTX~sex+age+age2+EUR_ANC, PGS3_JHS[[I]][Quantile==i]),lm(HEIGHTX~sex+age+age2+EUR_ANC+PGS, PGS3_JHS[[I]][Quantile==i]))
        }
}
B_JHS<-vector('list', length(r2_JHS))
names(B_JHS)<-names(r2_JHS)
for (I in names(r2_JHS)){
        B_JHS[[I]]<-data.table(Quant=c(a1[[I]], "total"),
        R_sq=c(unlist(r2_JHS[[I]]), partial_r2_JHS[[I]]),
        Med_Eur_Anc=c(unique(PGS3_JHS[[I]][Quantile==a1[[I]][1]][,Med_Eur_Anc]), unique(PGS3_JHS[[I]][Quantile==a1[[I]][2]][,Med_Eur_Anc]), median(PGS3_JHS[[I]][, EUR_ANC])))
        B_JHS[[I]][,N:=c(nrow(PGS3_JHS[[I]][Quantile==a1[[I]][1]]), nrow(PGS3_JHS[[I]][Quantile==a1[[I]][2]]),nrow(PGS3_JHS[[I]]))]
        B_JHS[[I]][,K:=1] #number of predictors. Need to check later if this is correct.
        B_JHS[[I]][, LCL:=CI.Rsq(R_sq, k=K, n=N)[3]]
        B_JHS[[I]][, UCL:=CI.Rsq(R_sq, k=K, n=N)[4]]
}
results.JHS<-vector('list', length(PGS3_JHS))
names(results.JHS)<-names(PGS3_JHS)
for (I in names(PGS3_JHS)){
        results.JHS[[I]]<-vector('list', length(a1[[I]])+1)
        names(results.JHS[[I]])<-c(a1[[I]], "total")
        lapply(a1[[I]], function(i) boot(data=PGS3_JHS[[I]][Quantile==i], statistic=rsq.R2,R=999, formula1=HEIGHTX~sex+age+age2+EUR_ANC, formula2=HEIGHTX~sex+age+age2+EUR_ANC+PGS))-> results.JHS[[I]]
        cat(I)
        cat(' done\n')
}
for (I in names(PGS3_JHS)){
        tp <- boot(data=PGS2_JHS[[I]], statistic=rsq.R2, R=999, formula1=HEIGHTX~sex+age+age2+EUR_ANC, formula2=HEIGHTX~sex+age+age2+EUR_ANC+PGS)
        list.append(results.JHS[[I]], tp)-> results.JHS[[I]]
        names(results.JHS[[I]])<-c(a1[[I]], "total")
        cat(I)
        cat(' done\n')
}
saveRDS(PGS3_JHS, file='~/height_prediction/gwas/JHS/output/PGS3_JHS.Rds')
saveRDS(results.JHS, file='~/height_prediction/gwas/JHS/output/results.JHS.Rds')
#confidence intervals
boots.ci.JHS<-lapply(results.JHS, function(Y) lapply(Y, function(X) boot.ci(X, type = c("norm", 'basic', "perc"))))
names(boots.ci.JHS)<-names(results.JHS)
for (I in names(PGS3_JHS)){
        B_JHS[[I]][1:2,]-> a
        B_JHS[[I]][3,]-> b
        a[,HVB_L:=sapply(a$Quant, function(X) as.numeric(gsub("\\]","",gsub("\\(","",gsub("\\[","",strsplit(X,",")[[1]])))))[1,]]
        a[,HVB_U:=sapply(a$Quant, function(X) as.numeric(gsub("\\]","",gsub("\\(","",gsub("\\[","",strsplit(X,",")[[1]])))))[2,]]
        b[,HVB_L:=1]
        b[,HVB_U:=1]
        rbind(a,b)->B_JHS[[I]]
        B_JHS[[I]][, Dataset:='JHS_AA']
        B_JHS[[I]][, boots_norm_L:=sapply(1:3, function(X) boots.ci.JHS[[I]][[X]]$normal[2])]
        B_JHS[[I]][, boots_norm_U:=sapply(1:3, function(X) boots.ci.JHS[[I]][[X]]$normal[3])]
        B_JHS[[I]][, boots_perc_L:=sapply(1:3, function(X) boots.ci.JHS[[I]][[X]]$perc[4])]
        B_JHS[[I]][, boots_perc_U:=sapply(1:3, function(X) boots.ci.JHS[[I]][[X]]$perc[5])]
        B_JHS[[I]][, boots_basic_L:=sapply(1:3, function(X) boots.ci.JHS[[I]][[X]]$basic[4])]
        B_JHS[[I]][, boots_basic_U:=sapply(1:3, function(X) boots.ci.JHS[[I]][[X]]$basic[5])]
}
for (I in names(PGS3_JHS)){
        myp<-ggplot(B_JHS[[I]][1:2,], aes(x=Med_Eur_Anc, y=R_sq)) +
        geom_point(size=1.5, shape=21, fill="white") +
        geom_errorbar(aes(x=Med_Eur_Anc, ymin=boots_perc_L, ymax=boots_perc_U), width=0.05, size=0.8, color="cornflowerblue") +
        geom_line(color='lightgray')+
        geom_errorbarh(aes(x=Med_Eur_Anc, xmin=HVB_L, xmax=HVB_U), width=0.05, size=0.5, color="cornflowerblue") +
        labs(title = "JHS_AA") + ylab("R-squared") + xlab("European Ancestry Proportion")
        print(myp)
        ggsave(paste0('~/height_prediction/gwas/JHS/figs/error_bars_', I, '.png'))
}
saveRDS(B_JHS, file="~/height_prediction/gwas/JHS/output/B_JHS.Rds")
#brary("optparse")
library(data.table)
library(dplyr)
library(ggplot2);library(reshape2); library(wesanderson)
library(rlist)
library(asbio)
library(GGally)
library(tidyr)
library(hexbin)
library(psychometric)
library(boot)
##############################################################
#combine all
##
readRDS('~/height_prediction/gwas/WHI/output/results.WHI.Rds')-> results.WHI
readRDS('~/height_prediction/gwas/JHS/output/results.JHS.Rds')-> results.JHS
readRDS('~/height_prediction/gwas/ukb_afr/output/results.UKB_afr.Rds')-> results.UKB_afr
readRDS('~/height_prediction/gwas/HRS_eur/output/results.HRS_eur.Rds')-> results.HRS_eur
readRDS('~/height_prediction/gwas/HRS_afr/output/results.HRS_afr.Rds')-> results.HRS_afr
readRDS('~/height_prediction/gwas/WHI/output/B_WHI.Rds')->B_WHI
readRDS('~/height_prediction/gwas/JHS/output/B_JHS.Rds')->B_JHS
readRDS('~/height_prediction/gwas/ukb_afr/output/B_UKB_afr.Rds')-> B_UKB_afr
readRDS('~/height_prediction/gwas/HRS_eur/output/B_HRS_eur.Rds')-> B_HRS_eur
readRDS('~/height_prediction/gwas/HRS_afr/output/B_HRS_afr.Rds')-> B_HRS_afr
readRDS('~/height_prediction/gwas/ukb_afr/output/PGS3_UKB_afr.Rds')-> PGS3_UKB_afr
readRDS('~/height_prediction/gwas/WHI/output/PGS3_WHI.Rds')-> PGS3_WHI
readRDS('~/height_prediction/gwas/JHS/output/PGS3_JHS.Rds')-> PGS3_JHS
readRDS('~/height_prediction/gwas/HRS_eur/output/PGS3_HRS_eur.Rds')-> PGS3_HRS_eur
readRDS('~/height_prediction/gwas/HRS_afr/output/PGS3_HRS_afr.Rds')-> PGS3_HRS_afr
for(I in names(B_JHS)){ #JHS lacks the LD prunning methods
        ALL<-rbind(B_JHS[[I]][1:2,], B_WHI[[I]][1:4,], B_UKB_afr[[I]][1:4,],B_HRS_afr[[I]][1:3,],  B_HRS_eur[[I]])
        #rbind(ALL[!(Dataset %in% c('UKB_EUR', 'pennBB_EA'))], ALL[Dataset %in% c('UKB_EUR', 'pennBB_EA')][, Med_Eur_Anc:=1])-> ALL
        my_plot<-ggplot(ALL, aes(x=Med_Eur_Anc, y=R_sq,group=Dataset, colour=Dataset)) +
        geom_point(size=1.5, shape=21, fill="white") +
        geom_errorbar(aes(x=Med_Eur_Anc, group=Dataset, colour=Dataset,ymin=boots_perc_L, ymax=boots_perc_U), width=0.05, size=0.8) +
        #geom_line(color='lightgray')+
        geom_errorbarh(aes(x=Med_Eur_Anc, group=Dataset, colour=Dataset, xmin=HVB_L, xmax=HVB_U), width=0.05, size=0.5) +  scale_color_brewer(palette="Dark2")+
        labs(title = "All Datasets") + ylab("R-squared")+ xlab("European Ancestry Proportion") +
        theme(axis.title.y = element_text(size = 15), axis.title.x=element_text(size=15), axis.text.x=element_text(size=9), axis.text.y=element_text(size=9))
        print(my_plot)
        ggsave(paste0('~/height_prediction/figs/error_bars_all_v2_', I, '.png'))
}
#
ALL2<-vector('list', length(names(B_JHS)))
names(ALL2)<-names(B_JHS)
for(I in names(B_JHS)){
        ALL2[[I]]<-rbind(B_JHS[[I]][1:2,], B_WHI[[I]][1:4,], B_UKB_afr[[I]][1:4,], B_HRS_afr[[I]][1:3,], B_HRS_eur[[I]])
        #rbind(ALL2[[I]][!(Dataset %in% c('UKB_EUR', 'pennBB_EA'))], ALL2[[I]][Dataset %in% c('UKB_EUR', 'pennBB_EA')][, Med_Eur_Anc:=1])-> ALL2[[I]]
        tmp<-1/c(var(results.JHS[[I]][[1]]$t), var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.HRS_eur[[I]]$t))  #weighing lm by boostrap replicates.
        cbind(ALL2[[I]], W=tmp)-> ALL2[[I]]
        my_plot2<-ggplot(ALL2[[I]], aes(x=Med_Eur_Anc, y=R_sq)) +
                geom_point(size=1.5, shape=21, fill="white") + stat_smooth(method = "lm", mapping = aes(weight = W), col='black') +
                scale_color_brewer(palette="Dark2") +
                labs(title = "All Datasets") + ylab("R-squared") + xlab("European Ancestry Proportion")+
                theme(axis.title.y = element_text(size = 15), axis.title.x=element_text(size=15),  axis.text.x=element_text(size=9), axis.text.y=element_text(size=9))
        print(my_plot2)
        ggsave(paste0('~/height_prediction/figs/error_bars_all_v3_', I, '.png'))
}
for(I in names(B_JHS)){
        ALL2b[[I]]<-rbind(B_JHS[[I]][1:2,], B_WHI[[I]][1:4,], B_UKB_afr[[I]][1:4,], B_HRS_afr[[I]][1:3,], B_HRS_eur[[I]])
       # rbind(ALL2b[[I]][!(Dataset %in% 'pennBB_EA')], ALL2b[[I]][Dataset %in% 'pennBB_EA'][, Med_Eur_Anc:=1])-> ALL2b[[I]]
        tmp<-1/c(var(results.JHS[[I]][[1]]$t), var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.HRS_afr[[I]][[1]]$t), var(results.HRS_afr[[I]][[2]]$t), var(results.HRS_afr[[I]][[3]]$t),var(results.HRS_eur[[I]]$t))
        cbind(ALL2b[[I]], W=tmp)-> ALL2b[[I]]
        my_plot2<-ggplot(ALL2b[[I]], aes(x=Med_Eur_Anc, y=R_sq)) +
                geom_point(size=1.5, shape=21, fill="white") + stat_smooth(method = "lm", mapping = aes(weight = W), col='black') +
                scale_color_brewer(palette="Dark2") +
                labs(title = "All Datasets") + ylab("R-squared") + xlab("European Ancestry Proportion")+
                theme(axis.title.y = element_text(size = 15), axis.title.x=element_text(size=15),  axis.text.x=element_text(size=9), axis.text.y=element_text(size=9))
        print(my_plot2)
        ggsave(paste0('~/height_prediction/figs/error_bars_all_v3b_', I, '.png'))
}
for(I in names(B_JHS)){
        my_plot<-ggplot(ALL2[[I]], aes(x=Med_Eur_Anc, y=R_sq,colour=Dataset)) +
        geom_point(size=1.5, shape=21, fill="white") + stat_smooth(data=ALL2[[I]],,method = "lm", mapping = aes(weight = W), col='black') +
        geom_errorbar(aes(x=Med_Eur_Anc, group=Dataset, colour=Dataset,ymin=boots_perc_L, ymax=boots_perc_U), width=0.05, size=0.8) +
        #geom_line(color='lightgray')+
        geom_errorbarh(aes(x=Med_Eur_Anc, group=Dataset, colour=Dataset, xmin=HVB_L, xmax=HVB_U), width=0.05, size=0.5) +  scale_color_brewer(palette="Dark2")+
        labs(title = "All Datasets") + ylab("R-squared")+ xlab("European Ancestry Proportion") +
        theme(axis.title.y = element_text(size = 15), axis.title.x=element_text(size=15), axis.text.x=element_text(size=9), axis.text.y=element_text(size=9))
        print(my_plot)
        ggsave(paste0('~/height_prediction/figs/error_bars_all_v4_', I, '.png'))
}
#
ALL3<-vector('list', length(names(B_JHS)))
names(ALL3)<- names(B_JHS)
for (I in names(B_JHS)){
        ALL3[[I]]<-rbind(B_JHS[[I]][1:2,], B_WHI[[I]][1:4,], B_UKB_afr[[I]][1:4,],B_HRS_afr[[I]][1:3,], B_HRS_eur[[I]])
        #rbind(ALL3[[I]][!(Dataset %in% c('UKB_EUR', 'pennBB_EA'))], ALL3[[I]][Dataset %in% c('UKB_EUR', 'pennBB_EA')][, Med_Eur_Anc:=1])-> ALL3[[I]]
        ALL3[[I]][,Set:=I]
        tmp<-lm(R_sq~Med_Eur_Anc,weights=1/
        c(var(results.JHS[[I]][[1]]$t), var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.HRS_afr[[I]][[1]]$t), var(results.HRS_afr[[I]][[2]]$t), var(results.HRS_afr[[I]][[3]]$t),var(results.HRS_eur[[I]]$t)), data=ALL3[[I]]
        #c(var(results.JHS[[I]][[1]]$t),var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.WHI[[I]][[5]]$t),var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.pennBB_afr[[I]][[1]]$t),var(results.pennBB_afr[[I]][[2]]$t), var(results.UKB_eur[[I]]$total$t), var(results.pennBB_eur[[I]]$total$t)), data=ALL3[[I]])  #weight lm
        readRDS('~/height_prediction/gwas/WHI/output/Nr_SNPs_WHI.Rds')[Name==I][, Nr]->a
        readRDS('~/height_prediction/gwas/ukb_afr/output/Nr_SNPs_UKB.Rds')[Name==I][, Nr]->b
        readRDS('~/height_prediction/gwas/JHS/output/Nr_SNPs_JHS.Rds')[Name==I][, Nr]->d
        readRDS('~/height_prediction/gwas/HRS_eur/output/Nr_SNPs_HRS.Rds')[Name==I][, Nr]->f
        readRDS('~/height_prediction/gwas/HRS_afr/output/Nr_SNPs_HRS.Rds')[Name==I][, Nr]->g
        #readRDS('Nr_SNPs_pennBB_afr.Rds')[Name==I][, Nr]->f
        #readRDS('Nr_SNPs_pennBB_eur.Rds')[Name==I][, Nr]->g
        ALL3[[I]][,Intercept:=coef(tmp)[[1]]][,Slope:=coef(tmp)[[2]]]
        ALL3[[I]][,Slope_Intercept:=sum(coef(tmp))]
        ALL3[[I]][, Nr_SNPs_WHI:=a]
        ALL3[[I]][, Nr_SNPs_UKB:=b]
        ALL3[[I]][, Nr_SNPs_JHS:=d]
        ALL3[[I]][, Nr_SNPs_HRS_eur:=f]
        ALL3[[I]][, Nr_SNPs_HRS_eur:=g]
        cat(I, ' \n')
}
readRDS('~/height_prediction/gwas/WHI/output/Nr_SNPs_WHI.Rds')
readRDS('~/height_prediction/gwas/JHS/output/Nr_SNPs_JHS.Rds')
readRDS('~/height_prediction/gwas/ukb_afr/output/Nr_SNPs_UKB_afr.Rds')
readRDS('~/height_prediction/gwas/JHS/output/Nr_SNPs_JHS.Rds')
readRDS('~/height_prediction/gwas/HRS_eur/output/Nr_SNPs_HRS.Rds')
readRDS('~/height_prediction/gwas/HRS_afr/output/Nr_SNPs_HRS.Rds')
readRDS('~/height_prediction/gwas/HRS_afr/output/Nr_SNPs_HRS_afr.Rds')
readRDS('~/height_prediction/gwas/HRS_afr/output/Nr_SNPs_HRS_afr.Rds')[63,]
readRDS('~/height_prediction/gwas/HRS_afr/output/Nr_SNPs_HRS.Rds')[63,]
readRDS('~/height_prediction/gwas/HRS_eur/output/Nr_SNPs_HRS.Rds')[63,]
ALL3<-vector('list', length(names(B_JHS)))
names(ALL3)<- names(B_JHS)
for (I in names(B_JHS)){
        ALL3[[I]]<-rbind(B_JHS[[I]][1:2,], B_WHI[[I]][1:4,], B_UKB_afr[[I]][1:4,],B_HRS_afr[[I]][1:3,], B_HRS_eur[[I]])
        #rbind(ALL3[[I]][!(Dataset %in% c('UKB_EUR', 'pennBB_EA'))], ALL3[[I]][Dataset %in% c('UKB_EUR', 'pennBB_EA')][, Med_Eur_Anc:=1])-> ALL3[[I]]
        ALL3[[I]][,Set:=I]
        tmp<-lm(R_sq~Med_Eur_Anc,weights=1/
        c(var(results.JHS[[I]][[1]]$t), var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.HRS_afr[[I]][[1]]$t), var(results.HRS_afr[[I]][[2]]$t), var(results.HRS_afr[[I]][[3]]$t),var(results.HRS_eur[[I]]$t)), data=ALL3[[I]]
        #c(var(results.JHS[[I]][[1]]$t),var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.WHI[[I]][[5]]$t),var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.pennBB_afr[[I]][[1]]$t),var(results.pennBB_afr[[I]][[2]]$t), var(results.UKB_eur[[I]]$total$t), var(results.pennBB_eur[[I]]$total$t)), data=ALL3[[I]])  #weight lm
        readRDS('~/height_prediction/gwas/WHI/output/Nr_SNPs_WHI.Rds')[Name==I][, Nr]->a
        readRDS('~/height_prediction/gwas/ukb_afr/output/Nr_SNPs_UKB_afr.Rds')[Name==I][, Nr]->b
        readRDS('~/height_prediction/gwas/JHS/output/Nr_SNPs_JHS.Rds')[Name==I][, Nr]->d
        readRDS('~/height_prediction/gwas/HRS_eur/output/Nr_SNPs_HRS.Rds')[Name==I][, Nr]->f
        #readRDS('Nr_SNPs_pennBB_afr.Rds')[Name==I][, Nr]->f
        #readRDS('Nr_SNPs_pennBB_eur.Rds')[Name==I][, Nr]->g
        ALL3[[I]][,Intercept:=coef(tmp)[[1]]][,Slope:=coef(tmp)[[2]]]
        ALL3[[I]][,Slope_Intercept:=sum(coef(tmp))]
        ALL3[[I]][, Nr_SNPs_WHI:=a]
        ALL3[[I]][, Nr_SNPs_UKB:=b]
        ALL3[[I]][, Nr_SNPs_JHS:=d]
        ALL3[[I]][, Nr_SNPs_HRS_eur:=f]
        ALL3[[I]][, Nr_SNPs_HRS_afr:=f]
        cat(I, ' \n')
}
        readRDS('~/height_prediction/gwas/WHI/output/Nr_SNPs_WHI.Rds')[Name==I][, Nr]->a
        readRDS('~/height_prediction/gwas/ukb_afr/output/Nr_SNPs_UKB_afr.Rds')[Name==I][, Nr]->b
        readRDS('~/height_prediction/gwas/JHS/output/Nr_SNPs_JHS.Rds')[Name==I][, Nr]->d
        readRDS('~/height_prediction/gwas/HRS_eur/output/Nr_SNPs_HRS.Rds')[Name==I][, Nr]->f
        readRDS('~/height_prediction/gwas/WHI/output/Nr_SNPs_WHI.Rds')[Name==I][, Nr]->a
        readRDS('~/height_prediction/gwas/ukb_afr/output/Nr_SNPs_UKB_afr.Rds')[Name==I][, Nr]->b
        readRDS('~/height_prediction/gwas/JHS/output/Nr_SNPs_JHS.Rds')[Name==I][, Nr]->d
        readRDS('~/height_prediction/gwas/HRS_eur/output/Nr_SNPs_HRS.Rds')[Name==I][, Nr]->f
ALL3<-vector('list', length(names(B_JHS)))
names(ALL3)<- names(B_JHS)
for (I in names(B_JHS)){
        ALL3[[I]]<-rbind(B_JHS[[I]][1:2,], B_WHI[[I]][1:4,], B_UKB_afr[[I]][1:4,],B_HRS_afr[[I]][1:3,], B_HRS_eur[[I]])
        #rbind(ALL3[[I]][!(Dataset %in% c('UKB_EUR', 'pennBB_EA'))], ALL3[[I]][Dataset %in% c('UKB_EUR', 'pennBB_EA')][, Med_Eur_Anc:=1])-> ALL3[[I]]
        ALL3[[I]][,Set:=I]
        tmp<-lm(R_sq~Med_Eur_Anc,weights=1/
        c(var(results.JHS[[I]][[1]]$t), var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.HRS_afr[[I]][[1]]$t), var(results.HRS_afr[[I]][[2]]$t), var(results.HRS_afr[[I]][[3]]$t),var(results.HRS_eur[[I]]$t)), data=ALL3[[I]]
}
ALL3<-vector('list', length(names(B_JHS)))
names(ALL3)<- names(B_JHS)
for (I in names(B_JHS)){
        ALL3[[I]]<-rbind(B_JHS[[I]][1:2,], B_WHI[[I]][1:4,], B_UKB_afr[[I]][1:4,],B_HRS_afr[[I]][1:3,], B_HRS_eur[[I]])
        #rbind(ALL3[[I]][!(Dataset %in% c('UKB_EUR', 'pennBB_EA'))], ALL3[[I]][Dataset %in% c('UKB_EUR', 'pennBB_EA')][, Med_Eur_Anc:=1])-> ALL3[[I]]
        ALL3[[I]][,Set:=I]
        tmp<-lm(R_sq~Med_Eur_Anc,weights=1/
        c(var(results.JHS[[I]][[1]]$t), var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.HRS_afr[[I]][[1]]$t), var(results.HRS_afr[[I]][[2]]$t), var(results.HRS_afr[[I]][[3]]$t),var(results.HRS_eur[[I]]$t)), data=ALL3[[I]]
}
ALL3<-vector('list', length(names(B_JHS)))
names(ALL3)<- names(B_JHS)
for (I in names(B_JHS)){
        ALL3[[I]]<-rbind(B_JHS[[I]][1:2,], B_WHI[[I]][1:4,], B_UKB_afr[[I]][1:4,],B_HRS_afr[[I]][1:3,], B_HRS_eur[[I]])
        #rbind(ALL3[[I]][!(Dataset %in% c('UKB_EUR', 'pennBB_EA'))], ALL3[[I]][Dataset %in% c('UKB_EUR', 'pennBB_EA')][, Med_Eur_Anc:=1])-> ALL3[[I]]
        ALL3[[I]][,Set:=I]
        tmp<-lm(R_sq~Med_Eur_Anc,weights=1/
        c(var(results.JHS[[I]][[1]]$t), var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.HRS_afr[[I]][[1]]$t), var(results.HRS_afr[[I]][[2]]$t), var(results.HRS_afr[[I]][[3]]$t),var(results.HRS_eur[[I]]$t))
        #c(var(results.JHS[[I]][[1]]$t),var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.WHI[[I]][[5]]$t),var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.pennBB_afr[[I]][[1]]$t),var(results.pennBB_afr[[I]][[2]]$t), var(results.UKB_eur[[I]]$total$t), var(results.pennBB_eur[[I]]$total$t)), data=ALL3[[I]])  #weight lm
        readRDS('~/height_prediction/gwas/WHI/output/Nr_SNPs_WHI.Rds')[Name==I][, Nr]->a
        readRDS('~/height_prediction/gwas/ukb_afr/output/Nr_SNPs_UKB_afr.Rds')[Name==I][, Nr]->b
        readRDS('~/height_prediction/gwas/JHS/output/Nr_SNPs_JHS.Rds')[Name==I][, Nr]->d
        readRDS('~/height_prediction/gwas/HRS_eur/output/Nr_SNPs_HRS.Rds')[Name==I][, Nr]->f
       tmp<-lm(R_sq~Med_Eur_Anc,weights=1/
        c(var(results.JHS[[I]][[1]]$t), var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.HRS_afr[[I]][[1]]$t), var(results.HRS_afr[[I]][[2]]$t), var(results.HRS_afr[[I]][[3]]$t),var(results.HRS_eur[[I]]$t)), data=ALL3[[I]])
ALL3[[I]]
ALL3<-vector('list', length(names(B_JHS)))
names(ALL3)<- names(B_JHS)
for (I in names(B_JHS)){
        ALL3[[I]]<-rbind(B_JHS[[I]][1:2,], B_WHI[[I]][1:4,], B_UKB_afr[[I]][1:4,],B_HRS_afr[[I]][1:3,], B_HRS_eur[[I]])
}
ALL3][[I]]
ALL3[[I]]
ALL3[[I]][,R_sq]
ALL3<-vector('list', length(names(B_JHS)))
names(ALL3)<- names(B_JHS)
for (I in names(B_JHS)){
        ALL3[[I]]<-rbind(B_JHS[[I]][1:2,], B_WHI[[I]][1:4,], B_UKB_afr[[I]][1:4,],B_HRS_afr[[I]][1:3,], B_HRS_eur[[I]])
        #rbind(ALL3[[I]][!(Dataset %in% c('UKB_EUR', 'pennBB_EA'))], ALL3[[I]][Dataset %in% c('UKB_EUR', 'pennBB_EA')][, Med_Eur_Anc:=1])-> ALL3[[I]]
        ALL3[[I]][,Set:=I]
        tmp<-lm(R_sq~Med_Eur_Anc,weights=1/
        c(var(results.JHS[[I]][[1]]$t), var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.HRS_afr[[I]][[1]]$t), var(results.HRS_afr[[I]][[2]]$t), var(results.HRS_afr[[I]][[3]]$t),var(results.HRS_eur[[I]]$t)), data=ALL3[[I]])
}
ALL3<-vector('list', length(names(B_JHS)))
names(ALL3)<- names(B_JHS)
for (I in names(B_JHS)){
        ALL3[[I]]<-rbind(B_JHS[[I]][1:2,], B_WHI[[I]][1:4,], B_UKB_afr[[I]][1:4,],B_HRS_afr[[I]][1:3,], B_HRS_eur[[I]])
        #rbind(ALL3[[I]][!(Dataset %in% c('UKB_EUR', 'pennBB_EA'))], ALL3[[I]][Dataset %in% c('UKB_EUR', 'pennBB_EA')][, Med_Eur_Anc:=1])-> ALL3[[I]]
        ALL3[[I]][,Set:=I]
        tmp<-lm(R_sq~Med_Eur_Anc,weights=1/
        c(var(results.JHS[[I]][[1]]$t), var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.HRS_afr[[I]][[1]]$t), var(results.HRS_afr[[I]][[2]]$t), var(results.HRS_afr[[I]][[3]]$t),var(results.HRS_eur[[I]]$t)), data=ALL3[[I]])
        #c(var(results.JHS[[I]][[1]]$t),var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.WHI[[I]][[5]]$t),var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.pennBB_afr[[I]][[1]]$t),var(results.pennBB_afr[[I]][[2]]$t), var(results.UKB_eur[[I]]$total$t), var(results.pennBB_eur[[I]]$total$t)), data=ALL3[[I]])  #weight lm
        readRDS('~/height_prediction/gwas/WHI/output/Nr_SNPs_WHI.Rds')[Name==I][, Nr]->a
        readRDS('~/height_prediction/gwas/ukb_afr/output/Nr_SNPs_UKB_afr.Rds')[Name==I][, Nr]->b
        readRDS('~/height_prediction/gwas/JHS/output/Nr_SNPs_JHS.Rds')[Name==I][, Nr]->d
        readRDS('~/height_prediction/gwas/HRS_eur/output/Nr_SNPs_HRS.Rds')[Name==I][, Nr]->f
}
ALL3<-vector('list', length(names(B_JHS)))
names(ALL3)<- names(B_JHS)
for (I in names(B_JHS)){
        ALL3[[I]]<-rbind(B_JHS[[I]][1:2,], B_WHI[[I]][1:4,], B_UKB_afr[[I]][1:4,],B_HRS_afr[[I]][1:3,], B_HRS_eur[[I]])
        #rbind(ALL3[[I]][!(Dataset %in% c('UKB_EUR', 'pennBB_EA'))], ALL3[[I]][Dataset %in% c('UKB_EUR', 'pennBB_EA')][, Med_Eur_Anc:=1])-> ALL3[[I]]
        ALL3[[I]][,Set:=I]
        tmp<-lm(R_sq~Med_Eur_Anc,weights=1/
        c(var(results.JHS[[I]][[1]]$t), var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.HRS_afr[[I]][[1]]$t), var(results.HRS_afr[[I]][[2]]$t), var(results.HRS_afr[[I]][[3]]$t),var(results.HRS_eur[[I]]$t)), data=ALL3[[I]])
        #c(var(results.JHS[[I]][[1]]$t),var(results.JHS[[I]][[2]]$t), var(results.WHI[[I]][[1]]$t), var(results.WHI[[I]][[2]]$t), var(results.WHI[[I]][[3]]$t), var(results.WHI[[I]][[4]]$t), var(results.WHI[[I]][[5]]$t),var(results.UKB_afr[[I]][[1]]$t),var(results.UKB_afr[[I]][[2]]$t), var(results.UKB_afr[[I]][[3]]$t), var(results.UKB_afr[[I]][[4]]$t), var(results.pennBB_afr[[I]][[1]]$t),var(results.pennBB_afr[[I]][[2]]$t), var(results.UKB_eur[[I]]$total$t), var(results.pennBB_eur[[I]]$total$t)), data=ALL3[[I]])  #weight lm
        readRDS('~/height_prediction/gwas/WHI/output/Nr_SNPs_WHI.Rds')[Name==I][, Nr]->a
        readRDS('~/height_prediction/gwas/ukb_afr/output/Nr_SNPs_UKB_afr.Rds')[Name==I][, Nr]->b
        readRDS('~/height_prediction/gwas/JHS/output/Nr_SNPs_JHS.Rds')[Name==I][, Nr]->d
        readRDS('~/height_prediction/gwas/HRS_eur/output/Nr_SNPs_HRS.Rds')[Name==I][, Nr]->f
        #readRDS('Nr_SNPs_pennBB_afr.Rds')[Name==I][, Nr]->f
        #readRDS('Nr_SNPs_pennBB_eur.Rds')[Name==I][, Nr]->g
        ALL3[[I]][,Intercept:=coef(tmp)[[1]]][,Slope:=coef(tmp)[[2]]]
        ALL3[[I]][,Slope_Intercept:=sum(coef(tmp))]
        ALL3[[I]][, Nr_SNPs_WHI:=a]
        ALL3[[I]][, Nr_SNPs_UKB:=b]
        ALL3[[I]][, Nr_SNPs_JHS:=d]
        ALL3[[I]][, Nr_SNPs_HRS_eur:=f]
        ALL3[[I]][, Nr_SNPs_HRS_afr:=f]
        cat(I, ' \n')
}
ALL3
do.call(rbind,ALL3)[,.(Set,Intercept,Slope_Intercept, Slope, Nr_SNPs_WHI, Nr_SNPs_UKB, R_sq, Med_Eur_Anc)]->ALL4
#add nr of snps
ALL4[grep("phys",  ALL4$Set),][,.(Set,Intercept,Slope_Intercept)]->dt_phys
ALL4[grep("genet", ALL4$Set),][,.(Set,Intercept,Slope_Intercept)]->dt_genet
ALL4[grep("LD",    ALL4$Set),][,.(Set,Intercept,Slope_Intercept)]->dt_LD
#factor(dt$Set)-> dt$Setp
factor(dt_phys$Set)-> dt_phys$Set
factor(dt_genet$Set)-> dt_genet$Set
factor(dt_LD$Set)-> dt_LD$Set
factor(dt_LD$Set, levels(dt_LD$Set)[c(4,5,3,1,2)])-> dt_LD$Set
factor(dt_genet$Set, levels(dt_genet$Set)[c(5,4,3,2,1,10,9,8,7,6,15,14,13,12,11,20,19,18,17,16,25,24,23,22,21, 30, 29, 28, 27, 26, 35,34,33,32,31)])-> dt_genet$Set
factor(dt_phys$Set, levels(dt_phys$Set)[c(24,27,30,33,35,4,7,10,13,15,16,17,18,19,20,22,25,28,31,34,36,37,38,39,40,2,5,8,11,14,21,23,26,29,32,1,3,6,9,12)])-> dt_phys$Set
melt(dt_LD)-> dt_LD
rbind(dt_LD[grep("_250000_", dt_LD$Set)][, window:=250000], dt_LD[grep("_100000_", dt_LD$Set)][, window:=100000], dt_LD[grep("_50000_", dt_LD$Set)][, window:=50000], dt_LD[grep("block", dt_LD$Set)][, window:="-"])-> dt_LD
dt_LD[, method:=gsub("LD_50000_0.01_0.5", "LD_0.01_0.5", gsub("LD_100000_0.01_0.5", "LD_0.01_0.5", gsub("LD_250000_0.01_0.5", "LD_0.01_0.5", gsub("LD_block_0_0_AFR", "LD_block_AFR", gsub("LD_block_0_0_EUR", "LD_block_EUR", dt_LD[,Set])))))]
as.factor(dt_LD$window)-> dt_LD$window
factor(dt_LD$window, levels(dt_LD$window)[c(1,4,2,3)])-> dt_LD$window
ggplot(dt_LD,aes(x=method, y=value, colour=window, shape=variable)) + geom_point(size=2.5, alpha=1) + theme(axis.title.y = element_text(size = 15), axis.title.x=element_text(size=15), axis.text.x=element_text(size=9), axis.text.y=element_text(size=9))
ggsave('figs/reg_rsq_eur_anc_LD.png')
#
getwd()
ggplot(dt_LD,aes(x=method, y=value, colour=window, shape=variable)) + geom_point(size=2.5, alpha=1) + theme(axis.title.y = element_text(size = 15), axis.title.x=element_text(size=15), axis.text.x=element_text(size=9), axis.text.y=element_text(size=9))
ggsave('~/height_prediction/figs/reg_rsq_eur_anc_LD.png')
#
#
melt(dt_genet)->dt_genet
dt_genet[, c("method", "window","p") := tstrsplit(Set, "_")]
as.factor(dt_genet$window)-> dt_genet$window
ggplot() + geom_point(data=dt_genet,aes(x=p, y=value, colour=window, shape=variable), size=2.5, alpha = 1) + theme(axis.title.y = element_text(size = 15), axis.title.x=element_text(size=15), axis.text.x=element_text(size=9), axis.text.y=element_text(size=9))
ggsave('~/height_prediction/figs/reg_rsq_eur_anc_genet.png')
#
#
melt(dt_phys)-> dt_phys
dt_phys[, c("method", "window","p") := tstrsplit(Set, "_")]
as.factor(dt_phys$window)-> dt_phys$window
factor(dt_phys$window, levels(dt_phys$window)[c(3,7,2,8,6,4,1,5)])-> dt_phys$window
ggplot() + geom_point(data=dt_phys,aes(x=p, y=value, colour=window, shape=variable), size=2.5, alpha = 1) + theme(axis.title.y = element_text(size = 15), axis.title.x=element_text(size=15), axis.text.x=element_text(size=9), axis.text.y=element_text(size=9))
ggsave('~/height_prediction/figs/reg_rsq_eur_anc_phys.png')
data.table(Set=unique(ALL4$Set), Nr_SNPs=unique(ALL4$Nr_SNPs_UKB))->A1
ALL4[grep("phys",  ALL4$Set),][,.(Set,Intercept,Slope, Slope_Intercept, R_sq, Med_Eur_Anc)][Med_Eur_Anc==1][, Med_Eur_Anc:=NULL]->dt_phys
ALL4[grep("genet", ALL4$Set),][,.(Set,Intercept,Slope,Slope_Intercept, R_sq, Med_Eur_Anc)][Med_Eur_Anc==1][, Med_Eur_Anc:=NULL]->dt_genet
ALL4[grep("LD",    ALL4$Set),][,.(Set,Intercept,Slope, Slope_Intercept, R_sq, Med_Eur_Anc)][Med_Eur_Anc==1][, Med_Eur_Anc:=NULL]->dt_LD
dt_LD %>% group_by(Set) %>% dplyr::mutate(R_sq=min(R_sq)) %>% as.data.table-> dt_LD #remove ukb_eur
dt_phys %>% group_by(Set) %>% dplyr::mutate(R_sq=min(R_sq)) %>% as.data.table-> dt_phys
dt_genet %>% group_by(Set) %>% dplyr::mutate(R_sq=min(R_sq)) %>% as.data.table-> dt_genet
#factor(dt$Set)-> dt$Setp
factor(dt_phys$Set)-> dt_phys$Set
factor(dt_genet$Set)-> dt_genet$Set
factor(dt_LD$Set)-> dt_LD$Set
factor(dt_LD$Set, levels(dt_LD$Set)[c(4,5,3,1,2)])-> dt_LD$Set
factor(dt_genet$Set, levels(dt_genet$Set)[c(5,4,3,2,1,10,9,8,7,6,15,14,13,12,11,20,19,18,17,16,25,24,23,22,21, 30, 29, 28, 27, 26, 35,34,33,32,31)])-> dt_genet$Set
factor(dt_phys$Set, levels(dt_phys$Set)[c(24,27,30,33,35,4,7,10,13,15,16,17,18,19,20,22,25,28,31,34,36,37,38,39,40,2,5,8,11,14,21,23,26,29,32,1,3,6,9,12)])-> dt_phys$Set
melt(dt_LD)-> dt_LD
rbind(dt_LD[grep("_250000_", dt_LD$Set)][, window:=250000], dt_LD[grep("_100000_", dt_LD$Set)][, window:=100000], dt_LD[grep("_50000_", dt_LD$Set)][, window:=50000], dt_LD[grep("block", dt_LD$Set)][, window:="-"])-> dt_LD
dt_LD[, method:=gsub("LD_50000_0.01_0.5", "LD_0.01_0.5", gsub("LD_100000_0.01_0.5", "LD_0.01_0.5", gsub("LD_250000_0.01_0.5", "LD_0.01_0.5", gsub("LD_block_0_0_AFR", "LD_block_AFR", gsub("LD_block_0_0_EUR", "LD_block_EUR", dt_LD[,Set])))))]
as.factor(dt_LD$window)-> dt_LD$window
factor(dt_LD$window, levels(dt_LD$window)[c(1,4,2,3)])-> dt_LD$window
setkey(dt_LD, Set)
dt_LD[A1,nomatch=0]-> dt_LD
melt(dt_phys)-> dt_phys
dt_phys[, c("method", "window","p") := tstrsplit(Set, "_")]
as.factor(dt_phys$window)-> dt_phys$window
factor(dt_phys$window, levels(dt_phys$window)[c(3,7,2,8,6,4,1,5)])-> dt_phys$window
setkey(A1, Set)
setkey(dt_phys, Set)
dt_phys[A1,nomatch=0]-> dt_phys
melt(dt_genet)->dt_genet
dt_genet[, c("method", "window","p") := tstrsplit(Set, "_")]
as.factor(dt_genet$window)-> dt_genet$window
setkey(dt_genet, Set)
dt_genet[A1,nomatch=0]-> dt_genet
ggplot() + geom_point(data=dt_phys,aes(x=Nr_SNPs, y=value, colour=window, shape=variable), size=2.5, alpha = 1) + theme(axis.title.y = element_text(size = 15), axis.title.x=element_text(size=15), axis.text.x=element_text(size=9), axis.text.y=element_text(size=9))
ggsave('~/height_prediction/figs/reg_rsq_eur_anc_phys_v2.png')
ggplot() + geom_point(data=dt_genet,aes(x=Nr_SNPs, y=value, colour=window, shape=variable), size=2.5, alpha = 1) + theme(axis.title.y = element_text(size = 15), axis.title.x=element_text(size=15), axis.text.x=element_text(size=9), axis.text.y=element_text(size=9))
ggsave('~/height_prediction/figs/reg_rsq_eur_anc_genet_v2.png')
ggplot() + geom_point(data=dt_LD,aes(x=Nr_SNPs, y=value, colour=Set, shape=variable), size=2.5, alpha = 1) + theme(axis.title.y = element_text(size = 15), axis.title.x=element_text(size=15), axis.text.x=element_text(size=9), axis.text.y=element_text(size=9))
ggsave('~/height_prediction/figs/reg_rsq_eur_anc_LD_v2.png')
